apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  lables:
    app: "${project}-${case:lower:envType}-${case:lower:envName}-${project}"
    service: "${project}-${case:lower:envType}-${case:lower:envName}-${SERVICE_NAME}"
    environment: "${case:lower:envType}-${case:lower:envName}"
    envName: "${envName}"
    trigram: "${trigram}"
    iappli: "${iappli}"
    project: "${project}"
    version: "${version}"
  name: "${project}-${case:lower:envType}-${case:lower:envName}-${SERVICE_NAME}-deployment"

spec:
  progressDeadLinesSeconds: 600
  replicas: ${POD_REPLICAS}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: "${project}-${case:lower:envType}-${case:lower:envName}-${project}"
      service: "${project}-${case:lower:envType}-${case:lower:envName}-${SERVICE_NAME}"
    
    strategy:
      type: RollingUpdate
    
    template: 
      metadata:
        labels:
          app: "${project}-${case:lower:envType}-${case:lower:envName}-${project}"
          service: "${project}-${case:lower:envType}-${case:lower:envName}-${SERVICE_NAME}"
          environment: "${case:lower:envType}-${case:lower:envName}"
          envName: "${envName}"
          trigram: "${trigram}"
          iappli: "${iappli}"
          project: "${project}"
          version: "${version}"

      spec:
        containers:
          - name: ${SERVICE-NAME}
            image: 
            imagePullPolicy:
            env:
              - name: envType
                value: "${envType}" 
              - name: envName
                value: "${envName}"
              - name: JVM_OPTION
                value: "-Xms${JVM_XMS} -Xmx${JVM_XMX}" 
            envFrom:
              - configMapRef:
                  name: "${project}-${case:lower:envType}-${case:lower:envName}-bootstrap-configmap"
              - configMapRef:
                  name: "${project}-${case:lower:envType}-${case:lower:envName}-${SERVICE_NAME}-bootstrap-configmap"
              - sercretRef:
                  name: "${project}-${case:lower:envType}-${case:lower:envName}-vault"
              - secretRef:
                  name: "${project}-${case:lower:envType}-${case:lower:envName}-sg-monitoring"
              
            ports: 
              - containerPort: 8080
            resources: 
              limits:
                cpu: ${CONTAINER_RESOURCE_LIMIT-CPU}
                memory: ${CONTAINER_RESOURCE_LIMIT_MEMORY}
              requests: 
                cpu: ${CONTAINER_RESOURCE_REQUEST_CPU}
                memory : ${CONTAINER_RESOURCE_REQUEST_MEMORY}


---
apiVersion: v1
kind: Service
metadata: 
  labels:
      app: "${project}-${case:lower:envType}-${case:lower:envName}-${project}"
      service: "${project}-${case:lower:envType}-${case:lower:envName}-${SERVICE_NAME}"
      environment: "${case:lower:envType}-${case:lower:envName}"
      envName: "${envName}"
      trigram: "${trigram}"
      iappli: "${iappli}"
      project: "${project}"
      version: "${version}"
  name: "${project}-${case:lower:envType}-${case:lower:envName}-${SERVICE_NAME}-service"
spec:
  ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: "${project}-${case:lower:envType}-${case:lower:envName}-${project}"
    service: "${project}-${case:lower:envType}-${case:lower:envName}-${SERVICE_NAME}"
  sessionAffinity: None
  type: ClusterIP


